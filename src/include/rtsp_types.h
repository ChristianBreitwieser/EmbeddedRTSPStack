//
// Created by christianb on 19.07.20.
//

#ifndef RTSP_PARSER_RTSP_TYPES_H
#define RTSP_PARSER_RTSP_TYPES_H

#ifdef __cplusplus
extern "C" {
#endif

#include <memory.h>
#include <stdint.h>
#include <stdbool.h>


typedef enum {
    RTSP_METHOD_UNKNOWN,
    RTSP_METHOD_UNSUPPORTED,
    RTSP_METHOD_DESCRIBE,
    RTSP_METHOD_ANNOUNCE,
    RTSP_METHOD_GET_PARAMETER,
    RTSP_METHOD_OPTIONS,
    RTSP_METHOD_PAUSE,
    RTSP_METHOD_PLAY,
    RTSP_METHOD_RECORD,
    RTSP_METHOD_REDIRECT,
    RTSP_METHOD_SETUP,
    RTSP_METHOD_SET_PARAMETER,
    RTSP_METHOD_TEARDOWN
} eRTSP_METHOD;

typedef enum {
    RTSP_STATUSCODE_CONTINUE = 100,
    RTSP_STATUSCODE_OK = 200,
    RTSP_STATUSCODE_CREATED = 201,
    RTSP_STATUSCODE_LOW_ON_STORAGE_SPACE = 250,
    RTSP_STATUSCODE_MULTIPLE_CHOICES = 300,
    RTSP_STATUSCODE_MOVED_PERMANENTLY = 301,
    RTSP_STATUSCODE_MOVED_TEMPORARILY = 302,
    RTSP_STATUSCODE_SEE_OTHER = 303,
    RTSP_STATUSCODE_NOT_MODIFIED = 304,
    RTSP_STATUSCODE_USE_PROXY = 305,
    RTSP_STATUSCODE_BAD_REQUEST = 400,
    RTSP_STATUSCODE_UNAUTHORIZED = 401,
    RTSP_STATUSCODE_PAYMENT_REQUIRED = 402,
    RTSP_STATUSCODE_FORBIDDEN = 403,
    RTSP_STATUSCODE_NOT_FOUND = 404,
    RTSP_STATUSCODE_METHOD_NOT_ALLOWED = 405,
    RTSP_STATUSCODE_NOT_ACCEPTABLE = 406,
    RTSP_STATUSCODE_PROXY_AUTHENTICATION_REQUIRED = 407,
    RTSP_STATUSCODE_REQUEST_TIMED_OUT = 408,
    RTSP_STATUSCODE_GONE = 410,
    RTSP_STATUSCODE_LENGTH_REQUIRED = 411,
    RTSP_STATUSCODE_PRECONDITION_FAILED = 412,
    RTSP_STATUSCODE_REQUEST_ENTITY_TO_LARGE = 413,
    RTSP_STATUSCODE_REQUEST_URI_TO_LARGE = 414,
    RTSP_STATUSCODE_UNSUPPORTED_MEDIA_TYPE = 415,
    RTSP_STATUSCODE_PARAMETER_NOT_UNDERSTOOD = 451,
    RTSP_STATUSCODE_CONFERENCE_NOT_FOUND = 452,
    RTSP_STATUSCODE_NOT_ENOUGH_BANDWITH = 453,
    RTSP_STATUSCODE_SESSION_NOT_FOUND = 454,
    RTSP_STATUSCODE_METHOD_NOT_VALID_IN_THIS_STATE = 455,
    RTSP_STATUSCODE_HEADER_FIELD_NOT_VALID_FOR_RESSOURCE = 456,
    RTSP_STATUSCODE_INVALID_RANGE = 457,
    RTSP_STATUSCODE_PARAMETER_IS_READ_ONLY = 458,
    RTSP_STATUSCODE_AGGREGATE_OPERATION_NOT_ALLOWED = 459,
    RTSP_STATUSCODE_ONLY_AGGREGATE_OPERATION_ALLOWED = 460,
    RTSP_STATUSCODE_UNSUPPORTED_TRANSPORT = 461,
    RTSP_STATUSCODE_DESTINATION_UNREACHABLE = 462,
    RTSP_STATUSCODE_INTERNAL_SERVER_ERROR = 500,
    RTSP_STATUSCODE_NOT_IMPLEMENTED = 501,
    RTSP_STATUSCODE_BAD_GATEWAY = 502,
    RTSP_STATUSCODE_SERVICE_UNAVAILABLE = 503,
    RTSP_STATUSCODE_GATEWAY_TIME_OUT = 504,
    RTSP_STATUSCODE_RTSP_VERSION_NOT_SUPPORTED = 505,
    RTSP_STATUSCODE_OPTION_NOT_SUPPORTED = 551
}eRTSP_STATUSCODE;

typedef enum {
    RTSP_UNKOWN_HEADER,

    //General Header
    RTSP_HEADER_CACHE_CONTROL, ///< @see RFC2616 4.5 , RFC2326 5
    RTSP_HEADER_CONNECTION,///< @see RFC2616 4.5 , RFC2326 5
    RTSP_HEADER_DATE,///< @see RFC2616 4.5 , RFC2326 5
    //RTSP_HEADER_TRAILER,///< @see RFC2616 4.5
    RTSP_HEADER_VIA,///< @see RFC2616 4.5 , RFC2326 5
    //RTSP_HEADER_WARNING,///< @see RFC2616 4.5

    //Request Header
    RTSP_HEADER_ACCEPT,
    RTSP_HEADER_ACCEPT_ENCODING,
    RTSP_HEADER_ACCEPT_LANGUAGE,
    RTSP_HEADER_AUTHORIZATION,
    RTSP_HEADER_FROM,
    RTSP_HEADER_IF_MODIFIED_SINCE,
    RTSP_HEADER_RANGE,
    RTSP_HEADER_REFERER,
    RTSP_HEADER_USER_AGENT,

    //Response Header
    RTSP_HEADER_LOCATION,
    RTSP_HEADER_PROXY_AUTHENTICATE,
    RTSP_HEADER_PUBLIC,
    RTSP_HEADER_RETRY_AFTER,
    RTSP_HEADER_SERVER,
    RTSP_HEADER_VARY,
    RTSP_HEADER_WWW_AUTHENTICATE,

    //Entity Header
    RTSP_HEADER_ALLOW,
    RTSP_HEADER_CONTENT_BASE,
    RTSP_HEADER_CONTENT_ENCODING,
    RTSP_HEADER_CONTENT_LANGUAGE,
    RTSP_HEADER_CONTENT_LENGTH,
    RTSP_HEADER_CONTENT_LOCATION,
    RTSP_HEADER_CONTENT_TYPE,
    RTSP_HEADER_EXPIRES,
    RTSP_HEADER_LAST_MODIFIED,

    //Other
    RTSP_HEADER_BANDWITH,
    RTSP_HEADER_BLOCKSIZE,
    RTSP_HEADER_CONFERENCE,
    RTSP_HEADER_CSEQ,
    RTSP_HEADER_HOST,
    RTSP_HEADER_IF_MATCH,
    RTSP_HEADER_PROXY_REQUIRE,
    RTSP_HEADER_REQUIRE,
    RTSP_HEADER_RTP_INFO,
    RTSP_HEADER_SCALE,
    RTSP_HEADER_SPEED,
    RTSP_HEADER_SESSION,
    RTSP_HEADER_TIMESTAMP,
    RTSP_HEADER_TRANSPORT,
    RTSP_HEADER_UNSUPPORTED,

}eRTSP_HEADER;

typedef struct {
    eRTSP_HEADER key;
    union {
        char const * text;
        uint32_t number;
    } value;
}sRTSP_HEADER_ENTRY;

typedef struct {
    eRTSP_STATUSCODE statuscode;
    uint32_t header_cnt;
    sRTSP_HEADER_ENTRY * header;
}sRTSP_RESPONSE;

typedef struct {
    eRTSP_METHOD method;
    char const * uri;
    uint32_t header_cnt;
    sRTSP_HEADER_ENTRY * header;
}sRTSP_REQUEST;

#ifdef __cplusplus
}
#endif

#endif //RTSP_PARSER_RTSP_TYPES_H
